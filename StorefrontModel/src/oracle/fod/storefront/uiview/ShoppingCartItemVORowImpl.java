package oracle.fod.storefront.uiview;

import oracle.fod.storefront.entity.OrderItemEOImpl;

import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 09 07:10:19 MDT 2008
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ShoppingCartItemVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        LineItemId {
            public Object get(ShoppingCartItemVORowImpl obj) {
                return obj.getLineItemId();
            }

            public void put(ShoppingCartItemVORowImpl obj, Object value) {
                obj.setLineItemId((Number)value);
            }
        }
        ,
        OrderId {
            public Object get(ShoppingCartItemVORowImpl obj) {
                return obj.getOrderId();
            }

            public void put(ShoppingCartItemVORowImpl obj, Object value) {
                obj.setOrderId((Number)value);
            }
        }
        ,
        ProductId {
            public Object get(ShoppingCartItemVORowImpl obj) {
                return obj.getProductId();
            }

            public void put(ShoppingCartItemVORowImpl obj, Object value) {
                obj.setProductId((Number)value);
            }
        }
        ,
        Quantity {
            public Object get(ShoppingCartItemVORowImpl obj) {
                return obj.getQuantity();
            }

            public void put(ShoppingCartItemVORowImpl obj, Object value) {
                obj.setQuantity((Number)value);
            }
        }
        ,
        UnitPrice {
            public Object get(ShoppingCartItemVORowImpl obj) {
                return obj.getUnitPrice();
            }

            public void put(ShoppingCartItemVORowImpl obj, Object value) {
                obj.setUnitPrice((Number)value);
            }
        }
        ,
        ProductId1 {
            public Object get(ShoppingCartItemVORowImpl obj) {
                return obj.getProductId1();
            }

            public void put(ShoppingCartItemVORowImpl obj, Object value) {
                obj.setProductId1((Number)value);
            }
        }
        ,
        ProductName {
            public Object get(ShoppingCartItemVORowImpl obj) {
                return obj.getProductName();
            }

            public void put(ShoppingCartItemVORowImpl obj, Object value) {
                obj.setProductName((String)value);
            }
        }
        ,
        Description {
            public Object get(ShoppingCartItemVORowImpl obj) {
                return obj.getDescription();
            }

            public void put(ShoppingCartItemVORowImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        AdditionalInfo {
            public Object get(ShoppingCartItemVORowImpl obj) {
                return obj.getAdditionalInfo();
            }

            public void put(ShoppingCartItemVORowImpl obj, Object value) {
                obj.setAdditionalInfo((String)value);
            }
        }
        ,
        ListPrice {
            public Object get(ShoppingCartItemVORowImpl obj) {
                return obj.getListPrice();
            }

            public void put(ShoppingCartItemVORowImpl obj, Object value) {
                obj.setListPrice((Number)value);
            }
        }
        ,
        CategoryId {
            public Object get(ShoppingCartItemVORowImpl obj) {
                return obj.getCategoryId();
            }

            public void put(ShoppingCartItemVORowImpl obj, Object value) {
                obj.setCategoryId((Number)value);
            }
        }
        ,
        CategoryName {
            public Object get(ShoppingCartItemVORowImpl obj) {
                return obj.getCategoryName();
            }

            public void put(ShoppingCartItemVORowImpl obj, Object value) {
                obj.setCategoryName((String)value);
            }
        }
        ,
        LineTotal {
            public Object get(ShoppingCartItemVORowImpl obj) {
                return obj.getLineTotal();
            }

            public void put(ShoppingCartItemVORowImpl obj, Object value) {
                obj.setLineTotal((Number)value);
            }
        }
        ,
        Product {
            public Object get(ShoppingCartItemVORowImpl obj) {
                return obj.getProduct();
            }

            public void put(ShoppingCartItemVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ShoppingCartItemVORowImpl object);

        public abstract void put(ShoppingCartItemVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int LINEITEMID = AttributesEnum.LineItemId.index();
    public static final int ORDERID = AttributesEnum.OrderId.index();
    public static final int PRODUCTID = AttributesEnum.ProductId.index();
    public static final int QUANTITY = AttributesEnum.Quantity.index();
    public static final int UNITPRICE = AttributesEnum.UnitPrice.index();
    public static final int PRODUCTID1 = AttributesEnum.ProductId1.index();
    public static final int PRODUCTNAME = AttributesEnum.ProductName.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int ADDITIONALINFO = AttributesEnum.AdditionalInfo.index();
    public static final int LISTPRICE = AttributesEnum.ListPrice.index();
    public static final int CATEGORYID = AttributesEnum.CategoryId.index();
    public static final int CATEGORYNAME = AttributesEnum.CategoryName.index();
    public static final int LINETOTAL = AttributesEnum.LineTotal.index();

    public static final int PRODUCT = AttributesEnum.Product.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ShoppingCartItemVORowImpl() {
    }

    /**
     * Gets OrderItemEO entity object.
     * @return the OrderItemEO
     */
    public OrderItemEOImpl getOrderItemEO() {
        return (OrderItemEOImpl)getEntity(0);
    }

    /**
     * Gets ProductEO entity object.
     * @return the ProductEO
     */
    public EntityImpl getProductEO() {
        return (EntityImpl)getEntity(1);
    }

    /**
     * Gets ProductCategoryEO entity object.
     * @return the ProductCategoryEO
     */
    public EntityImpl getProductCategoryEO() {
        return (EntityImpl)getEntity(2);
    }

    /**
     * Gets the attribute value for LINE_ITEM_ID using the alias name LineItemId.
     * @return the LINE_ITEM_ID
     */
    public Number getLineItemId() {
        return (Number) getAttributeInternal(LINEITEMID);
    }

    /**
     * Sets <code>value</code> as attribute value for LINE_ITEM_ID using the alias name LineItemId.
     * @param value value to set the LINE_ITEM_ID
     */
    public void setLineItemId(Number value) {
        setAttributeInternal(LINEITEMID, value);
    }

    /**
     * Gets the attribute value for ORDER_ID using the alias name OrderId.
     * @return the ORDER_ID
     */
    public Number getOrderId() {
        return (Number) getAttributeInternal(ORDERID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORDER_ID using the alias name OrderId.
     * @param value value to set the ORDER_ID
     */
    public void setOrderId(Number value) {
        setAttributeInternal(ORDERID, value);
    }

    /**
     * Gets the attribute value for PRODUCT_ID using the alias name ProductId.
     * @return the PRODUCT_ID
     */
    public Number getProductId() {
        return (Number) getAttributeInternal(PRODUCTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PRODUCT_ID using the alias name ProductId.
     * @param value value to set the PRODUCT_ID
     */
    public void setProductId(Number value) {
        setAttributeInternal(PRODUCTID, value);
    }

    /**
     * Gets the attribute value for QUANTITY using the alias name Quantity.
     * @return the QUANTITY
     */
    public Number getQuantity() {
        return (Number) getAttributeInternal(QUANTITY);
    }

    /**
     * Sets <code>value</code> as attribute value for QUANTITY using the alias name Quantity.
     * @param value value to set the QUANTITY
     */
    public void setQuantity(Number value) {
        setAttributeInternal(QUANTITY, value);
    }

    /**
     * Gets the attribute value for UNIT_PRICE using the alias name UnitPrice.
     * @return the UNIT_PRICE
     */
    public Number getUnitPrice() {
        return (Number) getAttributeInternal(UNITPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for UNIT_PRICE using the alias name UnitPrice.
     * @param value value to set the UNIT_PRICE
     */
    public void setUnitPrice(Number value) {
        setAttributeInternal(UNITPRICE, value);
    }

    /**
     * Gets the attribute value for PRODUCT_ID using the alias name ProductId1.
     * @return the PRODUCT_ID
     */
    public Number getProductId1() {
        return (Number) getAttributeInternal(PRODUCTID1);
    }

    /**
     * Sets <code>value</code> as attribute value for PRODUCT_ID using the alias name ProductId1.
     * @param value value to set the PRODUCT_ID
     */
    public void setProductId1(Number value) {
        setAttributeInternal(PRODUCTID1, value);
    }

    /**
     * Gets the attribute value for PRODUCT_NAME using the alias name ProductName.
     * @return the PRODUCT_NAME
     */
    public String getProductName() {
        return (String) getAttributeInternal(PRODUCTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for PRODUCT_NAME using the alias name ProductName.
     * @param value value to set the PRODUCT_NAME
     */
    public void setProductName(String value) {
        setAttributeInternal(PRODUCTNAME, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for ADDITIONAL_INFO using the alias name AdditionalInfo.
     * @return the ADDITIONAL_INFO
     */
    public String getAdditionalInfo() {
        return (String) getAttributeInternal(ADDITIONALINFO);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDITIONAL_INFO using the alias name AdditionalInfo.
     * @param value value to set the ADDITIONAL_INFO
     */
    public void setAdditionalInfo(String value) {
        setAttributeInternal(ADDITIONALINFO, value);
    }

    /**
     * Gets the attribute value for LIST_PRICE using the alias name ListPrice.
     * @return the LIST_PRICE
     */
    public Number getListPrice() {
        return (Number) getAttributeInternal(LISTPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for LIST_PRICE using the alias name ListPrice.
     * @param value value to set the LIST_PRICE
     */
    public void setListPrice(Number value) {
        setAttributeInternal(LISTPRICE, value);
    }

    /**
     * Gets the attribute value for CATEGORY_ID using the alias name CategoryId.
     * @return the CATEGORY_ID
     */
    public Number getCategoryId() {
        return (Number) getAttributeInternal(CATEGORYID);
    }

    /**
     * Sets <code>value</code> as attribute value for CATEGORY_ID using the alias name CategoryId.
     * @param value value to set the CATEGORY_ID
     */
    public void setCategoryId(Number value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**
     * Gets the attribute value for CATEGORY_NAME using the alias name CategoryName.
     * @return the CATEGORY_NAME
     */
    public String getCategoryName() {
        return (String) getAttributeInternal(CATEGORYNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for CATEGORY_NAME using the alias name CategoryName.
     * @param value value to set the CATEGORY_NAME
     */
    public void setCategoryName(String value) {
        setAttributeInternal(CATEGORYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LineTotal.
     * @return the LineTotal
     */
    public Number getLineTotal() {
        Number qty = getQuantity();
        Number unitPrice = getUnitPrice();
        if (qty == null || unitPrice == null) 
            return new Number(0);
        else 
            return qty.multiply(unitPrice);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LineTotal.
     * @param value value to set the  LineTotal
     */
    public void setLineTotal(Number value) {
        setAttributeInternal(LINETOTAL, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link Product.
     */
    public RowIterator getProduct() {
        return (RowIterator)getAttributeInternal(PRODUCT);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * Sample exportable method.
     */
    public void sampleShoppingCartItemVORowImplExportable() {
    }

    /**
     * Sample exportable method.
     */
    public void sampleShoppingCartItemVORowImplExportable2(String testParam1) {
    }
}
