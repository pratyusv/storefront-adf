package oracle.fod.storefront.entity;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 09 10:11:56 MDT 2008
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProductTranslationEOImpl extends BaseEntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ProductId {
            public Object get(ProductTranslationEOImpl obj) {
                return obj.getProductId();
            }

            public void put(ProductTranslationEOImpl obj, Object value) {
                obj.setProductId((Number)value);
            }
        }
        ,
        Language {
            public Object get(ProductTranslationEOImpl obj) {
                return obj.getLanguage();
            }

            public void put(ProductTranslationEOImpl obj, Object value) {
                obj.setLanguage((String)value);
            }
        }
        ,
        SourceLang {
            public Object get(ProductTranslationEOImpl obj) {
                return obj.getSourceLang();
            }

            public void put(ProductTranslationEOImpl obj, Object value) {
                obj.setSourceLang((String)value);
            }
        }
        ,
        Description {
            public Object get(ProductTranslationEOImpl obj) {
                return obj.getDescription();
            }

            public void put(ProductTranslationEOImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        AdditionalInfo {
            public Object get(ProductTranslationEOImpl obj) {
                return obj.getAdditionalInfo();
            }

            public void put(ProductTranslationEOImpl obj, Object value) {
                obj.setAdditionalInfo((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(ProductTranslationEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(ProductTranslationEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CreationDate {
            public Object get(ProductTranslationEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(ProductTranslationEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(ProductTranslationEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(ProductTranslationEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(ProductTranslationEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(ProductTranslationEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ObjectVersionId {
            public Object get(ProductTranslationEOImpl obj) {
                return obj.getObjectVersionId();
            }

            public void put(ProductTranslationEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ProductTranslationEOImpl object);

        public abstract void put(ProductTranslationEOImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int PRODUCTID = AttributesEnum.ProductId.index();
    public static final int LANGUAGE = AttributesEnum.Language.index();
    public static final int SOURCELANG = AttributesEnum.SourceLang.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int ADDITIONALINFO = AttributesEnum.AdditionalInfo.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int OBJECTVERSIONID = AttributesEnum.ObjectVersionId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ProductTranslationEOImpl() {
    }

    /**
     * Gets the attribute value for ProductId, using the alias name ProductId.
     * @return the ProductId
     */
    public Number getProductId() {
        return (Number)getAttributeInternal(PRODUCTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProductId.
     * @param value value to set the ProductId
     */
    public void setProductId(Number value) {
        setAttributeInternal(PRODUCTID, value);
    }

    /**
     * Gets the attribute value for Language, using the alias name Language.
     * @return the Language
     */
    public String getLanguage() {
        return (String)getAttributeInternal(LANGUAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Language.
     * @param value value to set the Language
     */
    public void setLanguage(String value) {
        setAttributeInternal(LANGUAGE, value);
    }

    /**
     * Gets the attribute value for SourceLang, using the alias name SourceLang.
     * @return the SourceLang
     */
    public String getSourceLang() {
        return (String)getAttributeInternal(SOURCELANG);
    }

    /**
     * Sets <code>value</code> as the attribute value for SourceLang.
     * @param value value to set the SourceLang
     */
    public void setSourceLang(String value) {
        setAttributeInternal(SOURCELANG, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for AdditionalInfo, using the alias name AdditionalInfo.
     * @return the AdditionalInfo
     */
    public String getAdditionalInfo() {
        return (String)getAttributeInternal(ADDITIONALINFO);
    }

    /**
     * Sets <code>value</code> as the attribute value for AdditionalInfo.
     * @param value value to set the AdditionalInfo
     */
    public void setAdditionalInfo(String value) {
        setAttributeInternal(ADDITIONALINFO, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for ObjectVersionId, using the alias name ObjectVersionId.
     * @return the ObjectVersionId
     */
    public Number getObjectVersionId() {
        return (Number)getAttributeInternal(OBJECTVERSIONID);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param productId key constituent
     * @param language key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number productId, String language) {
        return new Key(new Object[]{productId, language});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("oracle.fod.storefront.entity.ProductTranslationEO");
        }
        return mDefinitionObject;
    }
}
