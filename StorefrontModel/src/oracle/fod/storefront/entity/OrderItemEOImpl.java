package oracle.fod.storefront.entity;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 17 05:21:17 MDT 2008
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrderItemEOImpl extends BaseEntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        OrderId {
            public Object get(OrderItemEOImpl obj) {
                return obj.getOrderId();
            }

            public void put(OrderItemEOImpl obj, Object value) {
                obj.setOrderId((Number)value);
            }
        }
        ,
        LineItemId {
            public Object get(OrderItemEOImpl obj) {
                return obj.getLineItemId();
            }

            public void put(OrderItemEOImpl obj, Object value) {
                obj.setLineItemId((Number)value);
            }
        }
        ,
        ProductId {
            public Object get(OrderItemEOImpl obj) {
                return obj.getProductId();
            }

            public void put(OrderItemEOImpl obj, Object value) {
                obj.setProductId((Number)value);
            }
        }
        ,
        Quantity {
            public Object get(OrderItemEOImpl obj) {
                return obj.getQuantity();
            }

            public void put(OrderItemEOImpl obj, Object value) {
                obj.setQuantity((Number)value);
            }
        }
        ,
        UnitPrice {
            public Object get(OrderItemEOImpl obj) {
                return obj.getUnitPrice();
            }

            public void put(OrderItemEOImpl obj, Object value) {
                obj.setUnitPrice((Number)value);
            }
        }
        ,
        CreatedBy {
            public Object get(OrderItemEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(OrderItemEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CreationDate {
            public Object get(OrderItemEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(OrderItemEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(OrderItemEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(OrderItemEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(OrderItemEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(OrderItemEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ObjectVersionId {
            public Object get(OrderItemEOImpl obj) {
                return obj.getObjectVersionId();
            }

            public void put(OrderItemEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Order {
            public Object get(OrderItemEOImpl obj) {
                return obj.getOrder();
            }

            public void put(OrderItemEOImpl obj, Object value) {
                obj.setOrder((OrderEOImpl)value);
            }
        }
        ,
        Product {
            public Object get(OrderItemEOImpl obj) {
                return obj.getProduct();
            }

            public void put(OrderItemEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Order1 {
            public Object get(OrderItemEOImpl obj) {
                return obj.getOrder1();
            }

            public void put(OrderItemEOImpl obj, Object value) {
                obj.setOrder1((OrderEOImpl)value);
            }
        }
        ,
        ProductVVO1 {
            public Object get(OrderItemEOImpl obj) {
                return obj.getProductVVO1();
            }

            public void put(OrderItemEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(OrderItemEOImpl object);

        public abstract void put(OrderItemEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ORDERID = AttributesEnum.OrderId.index();
    public static final int LINEITEMID = AttributesEnum.LineItemId.index();
    public static final int PRODUCTID = AttributesEnum.ProductId.index();
    public static final int QUANTITY = AttributesEnum.Quantity.index();
    public static final int UNITPRICE = AttributesEnum.UnitPrice.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int OBJECTVERSIONID = AttributesEnum.ObjectVersionId.index();
    public static final int ORDER = AttributesEnum.Order.index();
    public static final int PRODUCT = AttributesEnum.Product.index();
    public static final int ORDER1 = AttributesEnum.Order1.index();
    public static final int PRODUCTVVO1 = AttributesEnum.ProductVVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OrderItemEOImpl() {
    }

    /**
     * Gets the attribute value for OrderId, using the alias name OrderId.
     * @return the OrderId
     */
    public Number getOrderId() {
        return (Number)getAttributeInternal(ORDERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrderId.
     * @param value value to set the OrderId
     */
    public void setOrderId(Number value) {
        setAttributeInternal(ORDERID, value);
    }

    /**
     * Gets the attribute value for LineItemId, using the alias name LineItemId.
     * @return the LineItemId
     */
    public Number getLineItemId() {
        return (Number)getAttributeInternal(LINEITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineItemId.
     * @param value value to set the LineItemId
     */
    public void setLineItemId(Number value) {
        setAttributeInternal(LINEITEMID, value);
    }

    /**
     * Gets the attribute value for ProductId, using the alias name ProductId.
     * @return the ProductId
     */
    public Number getProductId() {
        return (Number)getAttributeInternal(PRODUCTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProductId.
     * @param value value to set the ProductId
     */
    public void setProductId(Number value) {
        setAttributeInternal(PRODUCTID, value);
    }

    /**
     * Gets the attribute value for Quantity, using the alias name Quantity.
     * @return the Quantity
     */
    public Number getQuantity() {
        return (Number)getAttributeInternal(QUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Quantity.
     * @param value value to set the Quantity
     */
    public void setQuantity(Number value) {
        setAttributeInternal(QUANTITY, value);
    }

    /**
     * Gets the attribute value for UnitPrice, using the alias name UnitPrice.
     * @return the UnitPrice
     */
    public Number getUnitPrice() {
        return (Number)getAttributeInternal(UNITPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UnitPrice.
     * @param value value to set the UnitPrice
     */
    public void setUnitPrice(Number value) {
        setAttributeInternal(UNITPRICE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for ObjectVersionId, using the alias name ObjectVersionId.
     * @return the ObjectVersionId
     */
    public Number getObjectVersionId() {
        return (Number)getAttributeInternal(OBJECTVERSIONID);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity OrderEOImpl.
     */
    public OrderEOImpl getOrder() {
        return (OrderEOImpl)getAttributeInternal(ORDER);
    }

    /**
     * Sets <code>value</code> as the associated entity OrderEOImpl.
     */
    public void setOrder(OrderEOImpl value) {
        setAttributeInternal(ORDER, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getProduct() {
        return (RowIterator)getAttributeInternal(PRODUCT);
    }

    /**
     * @return the associated entity OrderEOImpl.
     */
    public OrderEOImpl getOrder1() {
        return (OrderEOImpl)getAttributeInternal(ORDER1);
    }

    /**
     * Sets <code>value</code> as the associated entity OrderEOImpl.
     */
    public void setOrder1(OrderEOImpl value) {
        setAttributeInternal(ORDER1, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ProductVVO1.
     */
    public RowSet getProductVVO1() {
        return (RowSet)getAttributeInternal(PRODUCTVVO1);
    }

    /**
     * @param orderId key constituent
     * @param lineItemId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number orderId, Number lineItemId) {
        return new Key(new Object[]{orderId, lineItemId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("oracle.fod.storefront.entity.OrderItemEO");
        }
        return mDefinitionObject;
    }
    @Override
    protected void initDefaults() {
        super.initDefaults();
        SequenceImpl seq = new SequenceImpl("ORDER_ITEMS_SEQ ", getDBTransaction());
        populateAttributeAsChanged(LINEITEMID, seq.getSequenceNumber());

    }
}
